@using BlazorGenUI.Reflection.Models
@inherits RenderableComponentBase


<EditForm Model="@ComplexElement" OnValidSubmit="@(() => SignInEvent.InvokeAsync(ComplexElement))"
          class="text-center w-25 bg-light rounded-3 shadow p-2">
    <DataAnnotationsValidator/>
    @if (ComplexElement.Image != null)
    {
        <img class="mb-4" src="@ComplexElement.Image" alt="Login Image" width="72" height="72">
    }
    <h1 class="h3 mb-3 font-weight-normal">Sing in</h1>
    <label for="inputEmail" class="sr-only">Email address</label>
    <input type="email"
           id="inputEmail"
           class="form-control"
           placeholder="Email address"
           required=""
           autofocus=""
           @bind="@ComplexElement.Email">
    <label for="inputPassword" class="sr-only">Password</label>
    <input type="password"
           id="inputPassword"
           class="form-control"
           placeholder="Password"
           required=""
           @bind="@ComplexElement.Password">


    <div class="checkbox mb-3">
        <label>
            <input type="checkbox" @bind="@ComplexElement.RememberMe"> Remember me
        </label>
    </div>

    <button class="btn btn-lg btn-primary btn-block"
            type="submit">
        Sign in
    </button>
</EditForm>


@code {
    [Parameter]
    public LoginTemplateModel ComplexElement { get; set; }

    [Parameter]
    public EventCallback SignInEvent { get; set; }


}