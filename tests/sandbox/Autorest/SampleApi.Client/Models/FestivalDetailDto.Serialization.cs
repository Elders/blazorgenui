// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace SampleApi.Client.Models
{
    public partial class FestivalDetailDto : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Name))
            {
                if (Name != null)
                {
                    writer.WritePropertyName("name");
                    writer.WriteStringValue(Name);
                }
                else
                {
                    writer.WriteNull("name");
                }
            }
            if (Optional.IsDefined(Genre))
            {
                writer.WritePropertyName("genre");
                writer.WriteStringValue(Genre.Value.ToString());
            }
            if (Optional.IsDefined(Country))
            {
                if (Country != null)
                {
                    writer.WritePropertyName("country");
                    writer.WriteStringValue(Country);
                }
                else
                {
                    writer.WriteNull("country");
                }
            }
            if (Optional.IsDefined(LogoUri))
            {
                if (LogoUri != null)
                {
                    writer.WritePropertyName("logoUri");
                    writer.WriteStringValue(LogoUri);
                }
                else
                {
                    writer.WriteNull("logoUri");
                }
            }
            if (Optional.IsDefined(City))
            {
                if (City != null)
                {
                    writer.WritePropertyName("city");
                    writer.WriteStringValue(City);
                }
                else
                {
                    writer.WriteNull("city");
                }
            }
            if (Optional.IsDefined(Street))
            {
                if (Street != null)
                {
                    writer.WritePropertyName("street");
                    writer.WriteStringValue(Street);
                }
                else
                {
                    writer.WriteNull("street");
                }
            }
            if (Optional.IsDefined(Description))
            {
                if (Description != null)
                {
                    writer.WritePropertyName("description");
                    writer.WriteStringValue(Description);
                }
                else
                {
                    writer.WriteNull("description");
                }
            }
            if (Optional.IsDefined(StartTime))
            {
                writer.WritePropertyName("startTime");
                writer.WriteStringValue(StartTime.Value, "O");
            }
            if (Optional.IsDefined(EndTime))
            {
                writer.WritePropertyName("endTime");
                writer.WriteStringValue(EndTime.Value, "O");
            }
            if (Optional.IsDefined(Price))
            {
                writer.WritePropertyName("price");
                writer.WriteNumberValue(Price.Value);
            }
            if (Optional.IsDefined(Capacity))
            {
                writer.WritePropertyName("capacity");
                writer.WriteNumberValue(Capacity.Value);
            }
            if (Optional.IsCollectionDefined(StageList))
            {
                if (StageList != null)
                {
                    writer.WritePropertyName("stageList");
                    writer.WriteStartArray();
                    foreach (var item in StageList)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("stageList");
                }
            }
            if (Optional.IsCollectionDefined(FestivalInterpret))
            {
                if (FestivalInterpret != null)
                {
                    writer.WritePropertyName("festivalInterpret");
                    writer.WriteStartArray();
                    foreach (var item in FestivalInterpret)
                    {
                        writer.WriteObjectValue(item);
                    }
                    writer.WriteEndArray();
                }
                else
                {
                    writer.WriteNull("festivalInterpret");
                }
            }
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            writer.WriteEndObject();
        }
    }
}
