// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SampleApi.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class InterpretDetailDto : EntityBase
    {
        /// <summary>
        /// Initializes a new instance of the InterpretDetailDto class.
        /// </summary>
        public InterpretDetailDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InterpretDetailDto class.
        /// </summary>
        public InterpretDetailDto(string id = default(string), string name = default(string), string logoUri = default(string), double? rating = default(double?), int? genre = default(int?), string description = default(string), IList<MemberDetailDto> memberList = default(IList<MemberDetailDto>), IList<FestivalInterpretForInterpretDto> festivalInterpret = default(IList<FestivalInterpretForInterpretDto>), IList<StageInterpretForInterpretDto> stageInterpret = default(IList<StageInterpretForInterpretDto>))
            : base(id)
        {
            Name = name;
            LogoUri = logoUri;
            Rating = rating;
            Genre = genre;
            Description = description;
            MemberList = memberList;
            FestivalInterpret = festivalInterpret;
            StageInterpret = stageInterpret;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logoUri")]
        public string LogoUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rating")]
        public double? Rating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "genre")]
        public int? Genre { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "memberList")]
        public IList<MemberDetailDto> MemberList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "festivalInterpret")]
        public IList<FestivalInterpretForInterpretDto> FestivalInterpret { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageInterpret")]
        public IList<StageInterpretForInterpretDto> StageInterpret { get; set; }

    }
}
