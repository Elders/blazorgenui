// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SampleApi.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ReservationCreateUpdate : EntityBase
    {
        /// <summary>
        /// Initializes a new instance of the ReservationCreateUpdate class.
        /// </summary>
        public ReservationCreateUpdate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationCreateUpdate class.
        /// </summary>
        public ReservationCreateUpdate(string id = default(string), int? state = default(int?), int? tickets = default(int?), decimal? price = default(decimal?), string description = default(string), string userId = default(string), string festivalId = default(string))
            : base(id)
        {
            State = state;
            Tickets = tickets;
            Price = price;
            Description = description;
            UserId = userId;
            FestivalId = festivalId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public int? State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tickets")]
        public int? Tickets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public decimal? Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "festivalId")]
        public string FestivalId { get; set; }

    }
}
