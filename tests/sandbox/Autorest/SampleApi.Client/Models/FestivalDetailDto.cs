// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SampleApi.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class FestivalDetailDto : EntityBase
    {
        /// <summary>
        /// Initializes a new instance of the FestivalDetailDto class.
        /// </summary>
        public FestivalDetailDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FestivalDetailDto class.
        /// </summary>
        public FestivalDetailDto(string id = default(string), string name = default(string), int? genre = default(int?), string country = default(string), string logoUri = default(string), string city = default(string), string street = default(string), string description = default(string), System.DateTimeOffset? startTime = default(System.DateTimeOffset?), System.DateTimeOffset? endTime = default(System.DateTimeOffset?), decimal? price = default(decimal?), int? capacity = default(int?), IList<StageForFestivalDto> stageList = default(IList<StageForFestivalDto>), IList<FestivalInterpretForFestivalDto> festivalInterpret = default(IList<FestivalInterpretForFestivalDto>))
            : base(id)
        {
            Name = name;
            Genre = genre;
            Country = country;
            LogoUri = logoUri;
            City = city;
            Street = street;
            Description = description;
            StartTime = startTime;
            EndTime = endTime;
            Price = price;
            Capacity = capacity;
            StageList = stageList;
            FestivalInterpret = festivalInterpret;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "genre")]
        public int? Genre { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logoUri")]
        public string LogoUri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "street")]
        public string Street { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public System.DateTimeOffset? StartTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public System.DateTimeOffset? EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public decimal? Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "capacity")]
        public int? Capacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageList")]
        public IList<StageForFestivalDto> StageList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "festivalInterpret")]
        public IList<FestivalInterpretForFestivalDto> FestivalInterpret { get; set; }

    }
}
